#ifndef __CMODELINFO
#define __CMODELINFO

// this is all very messy!

#define FUNC_CBaseModelInfo_GetModelIndexByName				0x4C5940

#define ARRAY_CarColours							(RwRGBA*)	0xB4E480
#define ARRAY_ModelInfo							(CModelInfo**)	0xA9B0C8
#define CPedModelInfo_ARRAYSIZE									0x44
#define CVehicleModelInfo_ARRAYSIZE								0x308
#define NUM_VEHICLES											212
#define NUM_PEDS												278

class CPedModelInfo;

struct ModelCarsData
{
	DWORD					count;
	BYTE					objects[CVehicleModelInfo_ARRAYSIZE * NUM_VEHICLES];	// CVehicleModelInfo[NUM_VEHICLES]
};

struct ModelPedsData
{
	DWORD					count;
	BYTE					objects[CPedModelInfo_ARRAYSIZE * NUM_PEDS];			// CPedModelInfo[NUM_PEDS]
};

class CBoundingBox
{
public:
    CVector vecBoundMin;
    CVector vecBoundMax;
    CVector vecBoundOffset;
    float   fRadius;
};

enum eVehicleUpgradePosn
{
    VEHICLE_UPGRADE_POSN_BONET = 0,
    VEHICLE_UPGRADE_POSN_VENT,
    VEHICLE_UPGRADE_POSN_SPOILER,
    VEHICLE_UPGRADE_POSN_SIDESKIRT,
    VEHICLE_UPGRADE_POSN_FRONT_BULLBARS,
    VEHICLE_UPGRADE_POSN_REAR_BULLBARS,
    VEHICLE_UPGRADE_POSN_HEADLIGHTS,
    VEHICLE_UPGRADE_POSN_ROOF,
    VEHICLE_UPGRADE_POSN_NITRO,
    VEHICLE_UPGRADE_POSN_HYDRAULICS,
    VEHICLE_UPGRADE_POSN_STEREO,
    VEHICLE_UPGRADE_POSN_UNKNOWN,
    VEHICLE_UPGRADE_POSN_WHEELS,
    VEHICLE_UPGRADE_POSN_EXHAUST,
    VEHICLE_UPGRADE_POSN_FRONT_BUMPER,
    VEHICLE_UPGRADE_POSN_REAR_BUMPER,
    VEHICLE_UPGRADE_POSN_MISC,
};

enum eVehicleType
{
	VEHICLE_TYPE_AUTOMOBILE = 1,
	VEHICLE_TYPE_PLANE,
	VEHICLE_TYPE_BIKE,
	VEHICLE_TYPE_HELI,
	VEHICLE_TYPE_BOAT,
	VEHICLE_TYPE_TRAIN,
	VEHICLE_TYPE_TRAILER,
	VEHICLE_TYPE_BMX,
	VEHICLE_TYPE_MTRUCK,
	VEHICLE_TYPE_QUAD,
};

class CBaseModelInfo
{
public:
	//void				*	VFTBL;							// 0x0
	virtual void			Destructor();					// 0x0
    virtual void			AsAtomicModelInfoPtr();			// 0x4
    virtual void			AsDamageAtomicModelInfoPtr();	// 0x8
    virtual bool			AsLodAtomicModelInfoPtr();		// 0xC
    virtual void			GetModelType();					// 0x10
    virtual void			GetTimeInfo();					// 0x14
    virtual void			Init();							// 0x18
    virtual void			Shutdown();						// 0x1C
    virtual void			DeleteRwObject();				// 0x20
    virtual void			GetRwModelType();				// 0x24
	virtual RpAtomic*		CreateInstance_(void*);			// 0x28
    virtual RpAtomic*		CreateInstance();				// 0x2C
    virtual void			SetAnimFile(char*);				// 0x30
    virtual void			ConvertAnimFileIndex();			// 0x34
    virtual void			GetAnimFileIndex();				// 0x38

    unsigned long           ulHashKey;                  // +0x4   Generated by CKeyGen::GetUppercaseKey(char const *) called by CBaseModelInfo::SetModelName(char const *)
    unsigned short          usNumberOfRefs: 16;         // +0x8
    unsigned short          usTextureDictionary: 16;    // +0xA
    unsigned char           ucAlpha: 8;                 // +0xC

    unsigned char           ucNumOf2DEffects: 8;        // +0xD
    unsigned short          usUnknown: 16;              // +0xE     Something with 2d effects

    unsigned char           ucDynamicIndex: 8;          // +0x10

    unsigned char           dwUnknownFlag9: 1;          // +0x11
    unsigned char           dwUnknownFlag10: 1;
    unsigned char           dwUnknownFlag11: 1;
    unsigned char           dwUnknownFlag12: 1;
    unsigned char           dwUnknownFlag13: 1;
    unsigned char           dwUnknownFlag14: 1;
    unsigned char           dwUnknownFlag15: 1;
    unsigned char           dwUnknownFlag16: 1;

    // Flags used by CBaseModelInfo
    unsigned char           bDoWeOwnTheColModel: 1;     // +0x12
    unsigned char           bIsBackfaceCulled: 1;
    unsigned char           bIsLod: 1;
    unsigned char           bDontCastShadowsOn: 1;
    unsigned char           bDontWriteZBuffer: 1;
    unsigned char           bDrawAdditive: 1;
    unsigned char           bDrawLast: 1;
    unsigned char           bHasBeenPreRendered: 1;

    unsigned char           dwUnknownFlag25: 1;         // +0x13
    unsigned char           dwUnknownFlag26: 1;
    unsigned char           dwUnknownFlag27: 1;
    unsigned char           bSwaysInWind: 1;
    unsigned char           bCollisionWasStreamedWithModel: 1;  // CClumpModelInfo::SetCollisionWasStreamedWithModel(unsigned int)
    unsigned char           bDontCollideWithFlyer: 1;           // CAtomicModelInfo::SetDontCollideWithFlyer(unsigned int)
    unsigned char           bHasComplexHierarchy: 1;            // CClumpModelInfo::SetHasComplexHierarchy(unsigned int)
    unsigned char           bWetRoadReflection: 1;              // CAtomicModelInfo::SetWetRoadReflection(unsigned int)

    CColModel*				pColModel;                  // +0x14      CColModel: public CBoundingBox

    float                   fLodDistanceUnscaled;       // +0x18      Scaled is this value multiplied with flt_B6F118
    RwObject*               pRwObject;                  // +0x1C
};

class CVehicleModelInfo : public CBaseModelInfo
{
public:
	DWORD				_f20;							// 0x20
	RpMaterial		*	pCustomPlateMaterial;			// 0x24
	DWORD				_f28;							// 0x28
	DWORD				_f2C;							// 0x2C
	BYTE				_f30;							// 0x30
	BYTE				bCustomPlateDesign;				// 0x31
	WORD				_f32;							// 0x32
	eVehicleType		VehicleType;					// 0x34
};

class CObjectModelInfo : public CBaseModelInfo
{
};

class CModelInfo
{
protected:
    CBaseModelInfo				*	m_pInterface;
    DWORD                           m_dwModelID;					// 0x4
    DWORD                           m_dwReferences;					// 0x8
    //CColModelVJ					*	m_pCustomColModel;
    CColModel					*	m_pOriginalColModelInterface;	// 0xC
    RpClump*                        m_pCustomClump;					// 0x10

	static	RwRGBA				*	m_pCarColours;

public:
	CModelInfo				( void );
	CModelInfo				( DWORD dwModelID );

	virtual void					SCALAR_DELETING_DESTRUCTOR	( void ) = 0;
	virtual CBaseModelInfo		*	GetInterface				( void ) = 0;

	inline	CColModel			*	GetColModel()			{return m_pOriginalColModelInterface;};

	bool							IsValid()				{return ARRAY_ModelInfo + (4 * m_dwModelID) != 0;};

	static	RwRGBA				*	GetCarColour(int id)	{return &m_pCarColours[id];};
};

#endif